package network.units;

import merkle.Digest;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;

import java.util.Arrays;
import java.util.HexFormat;

public class WithdrawProofsTests {

    private final HexFormat hex = HexFormat.of();

    private final String[] rawTransfersData = new String[]{
            "2fa84652e2f17b200f5af7c3ed597c320b28861c00000000000000000000000000000000000000000000000000000000000000000000000000000000004c4b40",
            "2fa84652e2f17b200f5af7c3ed597c320b28861c00000000000000000000000000000000000000000000000000000000000000000000000000000000000f4240",
            "2fa84652e2f17b200f5af7c3ed597c320b28861c00000000000000000000000000000000000000000000000000000000000000000000000000000000000f4240",
            "2fa84652e2f17b200f5af7c3ed597c320b28861c00000000000000000000000000000000000000000000000000000000000000000000000000000000004c4b40",
            "03cf4d50c1450640175edbb0825272985fd392a50000000000000000000000000000000000000000000000000000000000000000000000000000000000200b20",
            "2fa84652e2f17b200f5af7c3ed597c320b28861c00000000000000000000000000000000000000000000000000000000000000000000000000000000000186a0",
            "03cf4d50c1450640175edbb0825272985fd392a50000000000000000000000000000000000000000000000000000000000000000000000000000000000030d40",
            "03cf4d50c1450640175edbb0825272985fd392a500000000000000000000000000000000000000000000000000000000000000000000000000000000000493e0",
            "03cf4d50c1450640175edbb0825272985fd392a50000000000000000000000000000000000000000000000000000000000000000000000000000000000061a80"
    };

    private final byte[][] transfersData = Arrays.stream(rawTransfersData)
            .map(hex::parseHex)
            .toArray(byte[][]::new);

    @Test
    void create() {
        Digest[] actualProofs = WithdrawProofs.create(transfersData, 3);
        String[] actualStrProofs = Arrays.stream(actualProofs)
                .map(digest -> hex.formatHex(digest.getBytes()))
                .toArray(String[]::new);

        String[] expectedStrProofs = new String[]{
                "98caa97464f245432e6376e2ab66cf384738be74f806fac6049ac017487af320",
                "1c6cb01b1a592fdfe72a4c744c5584dcad8edea93ea31745843ea0f96f00de35",
                "0d00102f4755e9279b57c582f310ef86d334ebd027d14f4b7518741ce5f3f9b5",
                "55653cc990e238f78b6b6dc53d764109c3d84897a88664dc165df5729a61c75d",
                "fcbb3f09658c5441fdbbddad0d0cd4c8413a003e112dc6d9d7956359d7887bd8",
                "db51ffebd840b700a68862fd6ac558d1e13aa6122c3b93e0cda8127fa0f7cfef",
                "81dceeefee0af1fc3cbba3c6b27f07140aca334a03f5bf443d7e53a8a2144037",
                "1e1b2f5821fefae163c6bd6659337c04be482d8550fdb456125909cc725149a7",
                "128892132a7cc9b87cb275eab13c00f7192e73c468ea110e950533e1b63954ed",
                "590e70d285db8df6fe8184d31f9be19bece1e29b835496463598c3429ae3dbfc"
        };

        Assertions.assertArrayEquals(actualStrProofs, expectedStrProofs);
    }
}
